{"ast":null,"code":"var _jsxFileName = \"E:\\\\AQHV\\\\AQVC-hack\\\\frontend\\\\src\\\\components\\\\PredictionCharts.js\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport './PredictionCharts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst PredictionCharts = ({\n  predictions\n}) => {\n  const timeSlots = ['08:00', '10:00', '12:00', '14:00', '16:00'];\n  const movements = timeSlots.map(time => {\n    const pred = predictions[time];\n    return pred ? pred.movement === 'UP' ? 1 : 0 : 0;\n  });\n  const confidences = timeSlots.map(time => {\n    const pred = predictions[time];\n    return pred ? pred.confidence * 100 : 0;\n  });\n  const predictionChartData = {\n    labels: timeSlots,\n    datasets: [{\n      label: 'Predicted Movement',\n      data: movements,\n      borderColor: '#00d4ff',\n      backgroundColor: 'rgba(0, 212, 255, 0.1)',\n      borderWidth: 3,\n      fill: true,\n      tension: 0.4\n    }]\n  };\n  const confidenceChartData = {\n    labels: timeSlots,\n    datasets: [{\n      label: 'Confidence Level (%)',\n      data: confidences,\n      backgroundColor: 'rgba(0, 212, 255, 0.6)',\n      borderColor: '#00d4ff',\n      borderWidth: 2\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        labels: {\n          color: '#ffffff'\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          color: '#ffffff'\n        },\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        }\n      },\n      x: {\n        ticks: {\n          color: '#ffffff'\n        },\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        }\n      }\n    }\n  };\n  const predictionChartOptions = {\n    ...chartOptions,\n    scales: {\n      ...chartOptions.scales,\n      y: {\n        ...chartOptions.scales.y,\n        max: 1,\n        ticks: {\n          ...chartOptions.scales.y.ticks,\n          stepSize: 1,\n          callback: function (value) {\n            return value === 1 ? 'UP' : 'DOWN';\n          }\n        }\n      }\n    }\n  };\n  const confidenceChartOptions = {\n    ...chartOptions,\n    scales: {\n      ...chartOptions.scales,\n      y: {\n        ...chartOptions.scales.y,\n        max: 100\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predicted vs Actual Movement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: predictionChartData,\n          options: predictionChartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Confidence Levels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: confidenceChartData,\n          options: confidenceChartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionCharts;\nexport default PredictionCharts;\nvar _c;\n$RefreshReg$(_c, \"PredictionCharts\");","map":{"version":3,"names":["React","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","PredictionCharts","predictions","timeSlots","movements","map","time","pred","movement","confidences","confidence","predictionChartData","labels","datasets","label","data","borderColor","backgroundColor","borderWidth","fill","tension","confidenceChartData","chartOptions","responsive","maintainAspectRatio","plugins","legend","color","scales","y","beginAtZero","ticks","grid","x","predictionChartOptions","max","stepSize","callback","value","confidenceChartOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["E:/AQHV/AQVC-hack/frontend/src/components/PredictionCharts.js"],"sourcesContent":["import React from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './PredictionCharts.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst PredictionCharts = ({ predictions }) => {\r\n  const timeSlots = ['08:00', '10:00', '12:00', '14:00', '16:00'];\r\n  \r\n  const movements = timeSlots.map(time => {\r\n    const pred = predictions[time];\r\n    return pred ? (pred.movement === 'UP' ? 1 : 0) : 0;\r\n  });\r\n\r\n  const confidences = timeSlots.map(time => {\r\n    const pred = predictions[time];\r\n    return pred ? pred.confidence * 100 : 0;\r\n  });\r\n\r\n  const predictionChartData = {\r\n    labels: timeSlots,\r\n    datasets: [\r\n      {\r\n        label: 'Predicted Movement',\r\n        data: movements,\r\n        borderColor: '#00d4ff',\r\n        backgroundColor: 'rgba(0, 212, 255, 0.1)',\r\n        borderWidth: 3,\r\n        fill: true,\r\n        tension: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const confidenceChartData = {\r\n    labels: timeSlots,\r\n    datasets: [\r\n      {\r\n        label: 'Confidence Level (%)',\r\n        data: confidences,\r\n        backgroundColor: 'rgba(0, 212, 255, 0.6)',\r\n        borderColor: '#00d4ff',\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: '#ffffff',\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          color: '#ffffff',\r\n        },\r\n        grid: {\r\n          color: 'rgba(255, 255, 255, 0.1)',\r\n        },\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: '#ffffff',\r\n        },\r\n        grid: {\r\n          color: 'rgba(255, 255, 255, 0.1)',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const predictionChartOptions = {\r\n    ...chartOptions,\r\n    scales: {\r\n      ...chartOptions.scales,\r\n      y: {\r\n        ...chartOptions.scales.y,\r\n        max: 1,\r\n        ticks: {\r\n          ...chartOptions.scales.y.ticks,\r\n          stepSize: 1,\r\n          callback: function(value) {\r\n            return value === 1 ? 'UP' : 'DOWN';\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const confidenceChartOptions = {\r\n    ...chartOptions,\r\n    scales: {\r\n      ...chartOptions.scales,\r\n      y: {\r\n        ...chartOptions.scales.y,\r\n        max: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"charts-container\">\r\n      <div className=\"chart-section\">\r\n        <h3>Predicted vs Actual Movement</h3>\r\n        <div className=\"chart-wrapper\">\r\n          <Line data={predictionChartData} options={predictionChartOptions} />\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-section\">\r\n        <h3>Confidence Levels</h3>\r\n        <div className=\"chart-wrapper\">\r\n          <Bar data={confidenceChartData} options={confidenceChartOptions} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionCharts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}